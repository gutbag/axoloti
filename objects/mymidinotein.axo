<objdefs appVersion="1.0.11">
   <obj.normal id="mymidinotein" uuid="f6693dab-7ee3-43c0-9a58-f71a0b8bfe06">
      <sDescription>Monophonic MIDI keyboard note input, gate, velocity and release velocity</sDescription>
      <author>Johannes Taelman</author>
      <license>BSD</license>
      <helpPatch>midi_in.axh</helpPatch>
      <inlets>
         <int32.positive name="midinote" description="MIDI Note"/>
      </inlets>
      <outlets>
         <bool32 name="gate" description="key pressed?"/>
         <frac32.positive name="velocity" description="note-on velocity"/>
         <frac32.positive name="releaseVelocity" description="note-off velocity"/>
      </outlets>
      <displays/>
      <params/>
      <attribs/>
      <code.declaration><![CDATA[uint8_t _gate;
uint8_t _velo;
uint8_t _rvelo;
uint8_t _note;]]></code.declaration>
      <code.init><![CDATA[_gate = 0;
//_note = inlet_midinote;]]></code.init>
      <code.krate><![CDATA[outlet_gate= _gate<<27;
outlet_velocity= _velo<<20;
outlet_releaseVelocity= _rvelo<<20;
_note = inlet_midinote;]]></code.krate>
      <code.midihandler><![CDATA[if ((status == MIDI_NOTE_ON + attr_midichannel) && (data2)) {if (data1 == _note) {
   _velo = data2;
   _gate = 1;
}
} else if (((status == MIDI_NOTE_ON + attr_midichannel) && (!data2))||          (status == MIDI_NOTE_OFF + attr_midichannel)) {
  if (data1 == _note) {
    _rvelo = data2;
    _gate = 0;
  }
} else if ((status == attr_midichannel + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
  _gate = 0;
}]]></code.midihandler>
   </obj.normal>
</objdefs>